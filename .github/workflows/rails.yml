name: "Rails CI"
on:
  push:
    branches: [ "main", "dev_ci" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:11-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Ruby and gems
      uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
      with:
        bundler-cache: true

    - name: Install dependencies
      run: |
        gem install bundler
        bundle install

    - name: Set up database
      run: bin/rails db:schema:load

    - name: Run RuboCop
      run: bundle exec rubocop --parallel

    - name: Run tests and check coverage
      run: |
        bundle exec rails test:all
        COVERAGE_PERCENT=$(grep -o '[0-9]+' | head -n1 coverage/.last_run.json)
        echo "Coverage: $COVERAGE_PERCENT%"
        if [ "$COVERAGE_PERCENT" -le 90 ]; then
          echo "Code coverage is below 90%"
          exit 1
        fi

    - name: Save coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/index.html
